import java.util.*;
import java.util.stream.Collectors;
public class Main
{
	public static void main(String[] args) {
	    
	    List<Integer> i = Arrays.asList(1,2,3,4,5,6);
	    
//  Find the square of all numbers from a list:
List<Integer> squareOfNumbers =i.stream().map(s-> s*s).collect(Collectors.toList());
System.out.println(squareOfNumbers);
        
//  Find the sum of all even numbers from a list:
List<Integer> numbers = Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);
int sumEven = numbers.stream()
                     .filter(n -> n % 2 == 0)
                     .mapToInt(Integer::intValue)
                     .sum();
System.out.println("Sum of even numbers: " + sumEven);

// Find the maximum number from a list:
int maxNumber = numbers.stream()
                       .max(Integer::compare)
                       .orElseThrow(NoSuchElementException::new);
System.out.println("Max number: " + maxNumber);

// Square each number and find the sum of squares:
int sumOfSquares = numbers.stream()
                          .map(n -> n * n)
                          .mapToInt(Integer::intValue)
                          .sum();
System.out.println("Sum of squares: " + sumOfSquares);

// Check if a list contains only positive numbers:
boolean allPositive = numbers.stream()
                             .allMatch(n -> n > 0);
System.out.println("All numbers are positive: " + allPositive);

// Print the first 5 numbers from a list:
numbers.stream()
       .limit(5)
       .forEach(System.out::println);
       
// Find the average of numbers:
double average = numbers.stream()
                        .mapToInt(Integer::intValue)
                        .average()
                        .orElse(0.0);
System.out.println("Average: " + average);

// Count how many numbers are greater than 10:
long count = numbers.stream()
                    .filter(n -> n > 10)
                    .count();
System.out.println("Count of numbers greater than 10: " + count);

	}
}
