import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;
import java.util.Arrays;
import java.util.List;

class Employee {
    private int id;
    private String firstName;
    private String lastName;
    private String email;
    private String phoneNumber;
    private String department;
    private int age;
    private double salary;
    private String company;


    public Employee(int id, String firstName, String lastName, String email, String phoneNumber, String department, int age, double salary, String company) {
        this.id = id;
        this.firstName = firstName;
        this.lastName = lastName;
        this.email = email;
        this.phoneNumber = phoneNumber;
        this.department = department;
        this.age = age;
        this.salary = salary;
        this.company = company;
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getFirstName() {
        return firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    public String getLastName() {
        return lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getPhoneNumber() {
        return phoneNumber;
    }

    public void setPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
    }

    public String getDepartment() {
        return department;
    }

    public void setDepartment(String department) {
        this.department = department;
    }

    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        this.age = age;
    }

    public double getSalary() {
        return salary;
    }

    public void setSalary(double salary) {
        this.salary = salary;
    }

    public String getCompany() {
        return company;
    }

    public void setCompany(String company) {
        this.company = company;
    }

    @Override
    public String toString() {
        return "Employee{" +
                "id=" + id +
                ", firstName='" + firstName + '\'' +
                ", lastName='" + lastName + '\'' +
                ", email='" + email + '\'' +
                ", phoneNumber='" + phoneNumber + '\'' +
                ", department='" + department + '\'' +
                ", age=" + age +
                ", salary=" + salary +
                ", company='" + company + '\'' +
                '}';
    }
}



public class Main {
    public static void main(String[] args) {
        List<Employee> employees = Arrays.asList(
            new Employee(1, "John", "Doe", "john.doe@gmail.com", "+911234567890", "IT", 30, 60000.0, "ABC Corp"),
            new Employee(2, "Jane", "Smith", "jane.smith@gmail.com", "+911234567891", "HR", 25, 50000.0, "XYZ Ltd"),
            new Employee(3, "Mike", "Johnson", "mike.johnson@yahoo.com", "+911234567892", "Finance", 40, 75000.0, "ABC Corp"),
            new Employee(4, "Emily", "Davis", "emily.davis@yahoo.com", "+911234567893", "IT", 28, 65000.0, "Tech Solutions"),
            new Employee(5, "Robert", "Brown", "robert.brown@google.com", "+911234567894", "Sales", 35, 55000.0, "ABC Corp"),
            new Employee(6, "Linda", "Taylor", "linda.taylor@google.com", "+911234567895", "Marketing", 32, 48000.0, "XYZ Ltd"),
            new Employee(7, "James", "Anderson", "james.anderson@yahoo.com", "+911234567896", "HR", 29, 52000.0, "Tech Solutions"),
            new Employee(8, "Mary", "Wilson", "mary.wilson@yahoo.com", "+911234567897", "Finance", 45, 78000.0, "ABC Corp"),
            new Employee(9, "Patricia", "White", "patricia.white@example.com", "+911234567898", "IT", 38, 69000.0, "XYZ Ltd"),
            new Employee(10, "David", "Martinez", "david.martinez@example.com", "+911234567899", "Sales", 27, 47000.0, "Tech Solutions")
        );
        
        Map<String, List<Employee>> employeesByDomain = employees.stream()
            .filter(employee -> employee.getEmail() != null && employee.getEmail().contains("@"))
            .collect(Collectors.groupingBy(employee -> {
                String email = employee.getEmail();
                return email.substring(email.indexOf("@") + 1);
            }));

        employeesByDomain.forEach((domain, empList) -> {
            System.out.println("Domain: " + domain);
            empList.forEach(employee -> System.out.println(employee.getEmail()));
        });
    }
}

